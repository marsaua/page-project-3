{"version":3,"sources":["script.js","js_parts/1login.js","js_parts/cards.js","js_parts/createCard.js","js_parts/deleteAllCards.js","js_parts/filter.js","js_parts/sendRequest.js","js_parts/visitCardiologist.js","js_parts/visitDentist.js","js_parts/visitTherapist.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChtSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.min.js","sourcesContent":["","const logInButton = document.querySelector(\".log_in_button\");\r\nconst logInForm = document.querySelector(\".login_form\");\r\nconst content = document.querySelector(\".main_conteiner\");\r\nconst passwordInput = document.getElementById(\"exampleInputPassword1\");\r\nconst emailInput = document.getElementById(\"exampleInputEmail1\");\r\nconst mistake = document.querySelector(\".email_wrong\");\r\nconst cardWrapper = document.querySelector(\".cards_wrapper\");\r\nconst main = document.querySelector(\".main\");\r\nconst closeLogin = document.getElementById(\"close_login\");\r\nconst submitButton = document.querySelector(\".login_submit\");\r\nconst createAppoint = document.getElementById(\"new_appointment_button\");\r\nlet token = \"\";\r\nlet objects;\r\nlogInButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  logInForm.style.display = \"flex\";\r\n  main.classList.add(\"login_bg\");\r\n});\r\n\r\nasync function authorisation(email, password) {\r\n  if (email !== \"cooluser@gmail.com\" || password !== \"SuperPuper123\") {\r\n    mistake.style.opacity = \"1\";\r\n  } else {\r\n    logInForm.style.display = \"none\";\r\n    cardWrapper.style.display = \"block\";\r\n    content.style.display = \"none\";\r\n    main.classList.remove(\"login_bg\");\r\n    logInButton.style.display = \"none\";\r\n    createAppoint.style.display = \"block\";\r\n\r\n    await fetch(\"https://ajax.test-danit.com/api/v2/cards/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: \"your@email.com\", password: \"password\" }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((token) => {\r\n        return token;\r\n      })\r\n      .then((result) => (token = result));\r\n    const cardAll = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    sendRequest(\"https://ajax.test-danit.com/api/v2/cards\", \"GET\", cardAll)\r\n      .then((response) => response)\r\n      .then((objects) => {\r\n        objects.map((item) => {\r\n          const modalFromServer = new Modal();\r\n          modalFromServer.checkingForCards();\r\n          modalFromServer.createCard(item, item.id, \"DELETE\");\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nlogInForm.addEventListener(\"submit\", (event) => {\r\n  const email = event.target[0].value;\r\n  const password = event.target[1].value;\r\n  authorisation(email, password);\r\n  event.preventDefault();\r\n});\r\n\r\nfunction handlePasswordInput() {\r\n  mistake.style.opacity = \"0\";\r\n}\r\npasswordInput.addEventListener(\"focus\", () => handlePasswordInput());\r\nemailInput.addEventListener(\"focus\", () => handlePasswordInput());\r\n\r\ndocument.body.addEventListener(\"click\", (event) => {\r\n  if (event.target.closest(\"#close_login\")) {\r\n    logInForm.style.display = \"none\";\r\n    main.classList.remove(\"login_bg\");\r\n  }\r\n});\r\n","const API = \"https://ajax.test-danit.com/api/v2/cards\";\r\n\r\nconst orderCards = document.querySelector(\".order__cards\");\r\nconst cardsWrapper = document.createElement(\"div\");\r\nconst modalWrapper = document.querySelector(\".modal_cards\");\r\ncardsWrapper.classList.add(\"cards_conteiner\");\r\nlet statusDelete;\r\n\r\nclass Modal {\r\n  constructor(name, id, objective, description, urgency, doctor) {\r\n    this.name = name;\r\n    this.id = id;\r\n    this.objective = objective;\r\n    this.description = description;\r\n    this.urgency = urgency;\r\n    this.doctor = doctor;\r\n  }\r\n  checkingForCards() {\r\n    const noCards = document.querySelector(\".no__cards\");\r\n    if (cardsWrapper.innerHTML !== \"\") {\r\n      noCards.style.display = \"none\";\r\n    } else {\r\n      noCards.style.display = \"block\";\r\n    }\r\n  }\r\n  render(\r\n    descriptionDev = \"\",\r\n    doctorDev = \"Choose a doctor\",\r\n    fullNameDev = \"\",\r\n    urgencyDev = \"normal\",\r\n    visitDev = \"\",\r\n    statusCardDev = \"Open\"\r\n  ) {\r\n    modalWrapper.insertAdjacentHTML(\r\n      \"beforeend\",\r\n      `\r\n            <section class=\"cards\">\r\n            <form action=\"\" class=\"cards__form form \"> \r\n            <p class=\"cards__closed\" jsname=\"itVqKe\"><svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path></svg></p>\r\n        <p>Fill out the patient card</p>\r\n        <select  class=\"cards__select\" name=\"doctor\" id=\"doctors__select\">\r\n            <option value=\"${doctorDev}\" selected disabled>${doctorDev}</option>\r\n            <option value=\"cardiologist\">Cardiologist</option>\r\n            <option value=\"dentist\">Dentist</option>\r\n            <option value=\"therapist\">Therapist</option>\r\n        </select>\r\n\r\n    <div class=\"form__content__item item\">\r\n        <label for=\"fullName\">Full name</label>\r\n        <input required value=\"${fullNameDev}\" class=\"item__input\"\r\n        id=\"fullName\"\r\n        name=\"fullName\"\r\n        type=\"text\"\r\n        tabindex=\"3\"\r\n        />\r\n    </div>\r\n            \r\n        <div class=\"urgency\">\r\n            <select class=\"cards__select\" name=\"urgency\">\r\n                <option value=\"${urgencyDev}\" selected disabled>Urgency</option>\r\n                <option value=\"high\">High</option>\r\n                <option value=\"normal\">Normal</option>\r\n                <option value=\"low\">Low</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"status\">\r\n            <select class=\"cards__select\" name=\"status\" id='status__card' disabled>\r\n                <option value=\"${statusCardDev}\" selected disabled>${statusCardDev}</option>\r\n                <option selected value=\"open\">Open</option>\r\n                <option value=\"done\">Done</option>\r\n            </select>\r\n        </div>\r\n\r\n    <div class=\"form__content\">\r\n      <div class=\"form__content__item item\">\r\n        <label for=\"visit\">Purpose of visit</label>\r\n        <input required value=\"${visitDev}\" class=\"item__input\"\r\n          id=\"visit\"\r\n          name=\"visit\"\r\n          type=\"text\"\r\n          tabindex=\"1\"\r\n        />\r\n      </div>\r\n      <div class=\"form__content__item item\">\r\n        <label for=\"description\">Description</label>\r\n        <input required value=\"${descriptionDev}\" class=\"item__input\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          type=\"text\"\r\n          tabindex=\"2\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"specialDoctorWrapper\">\r\n      </div>\r\n     \r\n\r\n    </div>\r\n     </form>\r\n    </div></section>\r\n        `\r\n    );\r\n    main.classList.add(\"login_bg\");\r\n  }\r\n  chooseDoctor() {\r\n    const dropDownDoctor = document.querySelector(\"#doctors__select\");\r\n    dropDownDoctor.addEventListener(\"change\", (event) => {\r\n      this.doctor = event.target.value;\r\n\r\n      const visitDentist = new VisitDentist();\r\n      visitDentist.test(this.doctor);\r\n\r\n      const visitCardiologist = new VisitCardiologist();\r\n      visitCardiologist.test(this.doctor);\r\n\r\n      const visitTherapist = new VisitTherapist();\r\n      visitTherapist.test(this.doctor);\r\n    });\r\n    this.submit(\"POST\");\r\n  }\r\n\r\n  closeCardForm() {\r\n    const form = document.querySelector(\".cards\");\r\n    const closed = document.querySelector(\".cards__closed\");\r\n    closed.addEventListener(\"click\", () => {\r\n      main.classList.remove(\"login_bg\");\r\n      modalWrapper.innerHTML = \"\";\r\n    });\r\n    form.addEventListener(\"click\", (event) => {\r\n      event.stopPropagation();\r\n    });\r\n    main.addEventListener(\"click\", () => {\r\n      main.classList.remove(\"login_bg\");\r\n      modalWrapper.innerHTML = \"\";\r\n    });\r\n  }\r\n  async submit(method, idCard) {\r\n    const form = document.querySelector(\".cards__form\");\r\n    form.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n      const inputElements = event.target.querySelectorAll(\"[name]\");\r\n      const valuesObject = Array.from(inputElements).reduce(\r\n        (accumulator, input) => {\r\n          accumulator[input.name] = input.value;\r\n          return accumulator;\r\n        },\r\n        {}\r\n      );\r\n      main.classList.remove(\"login_bg\");\r\n      modalWrapper.innerHTML = \"\";\r\n      if (method === \"POST\") {\r\n        const createCardRequest = {\r\n          method: `${method}`,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(valuesObject),\r\n        };\r\n\r\n        sendRequest(API, \"POST\", createCardRequest)\r\n          .then((data) => {\r\n            const { id } = data;\r\n            this.createCard(valuesObject, id, \"DELETE\");\r\n            this.checkingForCards();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Помилка:\", error);\r\n          });\r\n      } else if (method === \"PUT\") {\r\n        const sendRequestCards = {\r\n          method: `${method}`,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(valuesObject),\r\n        };\r\n        sendRequest(`${API}/${idCard}`, \"PUT\", sendRequestCards)\r\n          .then((response) => response)\r\n\r\n          .catch((error) => {\r\n            console.error(\"Помилка: \" + error);\r\n          });\r\n\r\n        const cardWrapper = document.getElementById(`${idCard}`);\r\n        const moInfo = cardWrapper.querySelector(\".another_info\");\r\n        for (let item in valuesObject) {\r\n          if (item === \"fullName\") {\r\n            cardWrapper.querySelector(\".fullName\").textContent =\r\n              valuesObject[item];\r\n          } else if (item === \"doctor\") {\r\n            cardWrapper.querySelector(\".doctor\").textContent =\r\n              valuesObject[item][0].toUpperCase() + valuesObject[item].slice(1);\r\n          } else {\r\n            const info = moInfo.querySelector(`.${item.toUpperCase()}`);\r\n            info.textContent = `${item.toUpperCase()}: ${valuesObject[item]}`;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  createCard(data, id, method) {\r\n    const cardWrapper = document.createElement(\"div\");\r\n    cardWrapper.classList.add(\"card_wrapper\");\r\n    cardWrapper.setAttribute(\"id\", id);\r\n\r\n    const cardTitle = document.createElement(\"h3\");\r\n    cardTitle.classList.add(\"fullName\");\r\n    const cardDoctor = document.createElement(\"h4\");\r\n    cardDoctor.classList.add(\"doctor\");\r\n\r\n    const anotherInfoWrap = document.createElement(\"div\");\r\n    anotherInfoWrap.classList.add(\"another_info\");\r\n\r\n    const buttonsWrap = document.createElement(\"div\");\r\n    buttonsWrap.classList.add(\"button_wrapper\");\r\n    const showMore = document.createElement(\"p\");\r\n    showMore.innerText = \"Show more...\";\r\n    showMore.classList.add(\"show_more\");\r\n    showMore.addEventListener(\"click\", () => {\r\n      showMore.style.display = \"none\";\r\n      anotherInfoWrap.style.display = \"block\";\r\n    });\r\n\r\n    const changeButton = document.createElement(\"button\");\r\n    changeButton.innerText = \"Edit\";\r\n    changeButton.classList.add(\"btn\");\r\n    changeButton.classList.add(\"btn-primary\");\r\n    changeButton.setAttribute(\"data-button\", \"change\");\r\n\r\n    const removeCard = document.createElement(\"button\");\r\n    removeCard.innerText = \"Remove\";\r\n    removeCard.classList.add(\"btn\");\r\n    removeCard.classList.add(\"btn-primary\");\r\n    removeCard.setAttribute(\"data-button\", \"remove\");\r\n    removeCard.classList.add(\"remove__button\");\r\n\r\n    cardsWrapper.append(cardWrapper);\r\n    cardWrapper.append(\r\n      cardTitle,\r\n      cardDoctor,\r\n      showMore,\r\n      anotherInfoWrap,\r\n      buttonsWrap\r\n    );\r\n    buttonsWrap.append(changeButton, removeCard);\r\n    for (let item in data) {\r\n      if (item === \"fullName\") {\r\n        cardTitle.innerText = data[item];\r\n      } else if (item === \"doctor\") {\r\n        cardDoctor.innerText =\r\n          data[item][0].toUpperCase() + data[item].slice(1);\r\n      } else {\r\n        const info = document.createElement(\"p\");\r\n        info.innerText = `${item.toUpperCase()}: ${data[item]}`;\r\n        info.classList.add(`${item.toUpperCase()}`);\r\n        anotherInfoWrap.append(info);\r\n      }\r\n    }\r\n    orderCards.append(cardsWrapper);\r\n\r\n    removeCard.addEventListener(\"click\", (event) => {\r\n      const deleteCardFromHtml = event.target.closest(\".card_wrapper\");\r\n      const createCardRequest = {\r\n        method: `${method}`,\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n      sendRequest(\r\n        `${API}/${deleteCardFromHtml.id}`,\r\n        \"DELETE\",\r\n        createCardRequest\r\n      )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            cardWrapper.remove();\r\n            this.checkingForCards();\r\n          } else {\r\n            throw new Error(\"Помилка видалення картки\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n    });\r\n  }\r\n}\r\nconst modal = new Modal();\r\ncreateAppoint.addEventListener(\"click\", () => {\r\n  modal.render();\r\n  modal.chooseDoctor();\r\n  modal.closeCardForm();\r\n});\r\n","let dataUser;\r\ndocument.body.addEventListener(\"click\", async (event) => {\r\n  if (event.target.dataset.button === \"change\") {\r\n    event.preventDefault();\r\n\r\n    const cardId = event.target.closest(\".card_wrapper\").id;\r\n    createAppoint.disable = true;\r\n\r\n    const sendRequestCard = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    sendRequest(`${API}/${cardId}`, \"GET\", sendRequestCard).then((data) => {\r\n      dataUser = data;\r\n      const {\r\n        age,\r\n        description,\r\n        doctor,\r\n        fullName,\r\n        urgency,\r\n        visit,\r\n        data: date,\r\n        disease,\r\n        massa,\r\n        pressure,\r\n        statusCard,\r\n      } = data;\r\n\r\n      modal.render(description, doctor, fullName, urgency, visit, statusCard);\r\n      modal.closeCardForm();\r\n      const visitDentist = new VisitDentist();\r\n      visitDentist.test(data.doctor, date);\r\n\r\n      const visitCardiologist = new VisitCardiologist();\r\n      visitCardiologist.test(data.doctor, pressure, massa, disease, age);\r\n\r\n      const visitTherapist = new VisitTherapist();\r\n      visitTherapist.test(data.doctor, age);\r\n      const doctorSelect = document.getElementById(\"doctors__select\");\r\n      doctorSelect.disabled = true;\r\n      const statusSelect = document.getElementById(\"status__card\");\r\n      statusSelect.disabled = false;\r\n      modal.submit(\"PUT\", data.id);\r\n    });\r\n  }\r\n});\r\n","const deleteAllCards = document.querySelector(\".delete-button\");\r\ndeleteAllCards.addEventListener(\"click\", () => {\r\n  const cardAll = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  sendRequest(\"https://ajax.test-danit.com/api/v2/cards\", \"GET\", cardAll)\r\n    .then((response) => response)\r\n    .then((response) => {\r\n      const arr = response;\r\n      arr.forEach((element) => {\r\n        const cardWrapper = document.getElementById(`${element.id}`);\r\n        console.log(element);\r\n        const createCardRequest = {\r\n          method: \"DELETE\",\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        };\r\n        sendRequest(`${API}/${element.id}`, \"DELETE\", createCardRequest)\r\n          .then((response) => {\r\n            if (response.status === 200) {\r\n              cardWrapper.remove();\r\n              modal.checkingForCards();\r\n            } else {\r\n              throw new Error(\"Помилка видалення картки\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.message);\r\n          });\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.message);\r\n    });\r\n});\r\n","//Card Filter\r\n\r\nconst urgencySelect = document.querySelector(\"#urgencySelect\");\r\nurgencySelect.addEventListener(\"change\", cardsFilter);\r\n\r\nfunction cardsFilter(item) {\r\n  let filterValue = item.target.value;\r\n\r\n  let urgencyStatus = document.querySelectorAll(\".URGENCY\");\r\n\r\n  urgencyStatus.forEach((e) => {\r\n    let currentInnerText = e.innerText.split(\" \")[1];\r\n\r\n    const deleteWrapper = e.closest(\".card_wrapper\");\r\n\r\n    if (filterValue !== currentInnerText) {\r\n      deleteWrapper.style.display = \"none\";\r\n    }\r\n    if (filterValue === currentInnerText || filterValue === \"all\") {\r\n      deleteWrapper.style.display = \"block\";\r\n    }\r\n  });\r\n}\r\n\r\n//Select Search\r\nconst statusSelect = document.querySelector(\"#statusSelect\");\r\nstatusSelect.addEventListener(\"change\", statusFilter);\r\n\r\nfunction statusFilter(item) {\r\n  let filterValue = item.target.value;\r\n\r\n  let statusStatus = document.querySelectorAll(\".STATUS\");\r\n\r\n  statusStatus.forEach((e) => {\r\n    let currentInnerText = e.innerText.split(\" \")[1];\r\n\r\n    const deleteWrapper = e.closest(\".card_wrapper\");\r\n\r\n    if (filterValue !== currentInnerText) {\r\n      deleteWrapper.style.display = \"none\";\r\n    }\r\n    if (filterValue === currentInnerText || filterValue === \"all\") {\r\n      deleteWrapper.style.display = \"block\";\r\n    }\r\n  });\r\n}\r\n\r\n///Input Search\r\n\r\nconst inputSearch = document.querySelector(\"#search_filter\");\r\nlet accum = \"\";\r\n\r\ninputSearch.addEventListener(\"input\", (e) => {\r\n  if (e.data === null) {\r\n    accum = accum.slice(0, inputSearch.value.length);\r\n  } else {\r\n    accum += e.data;\r\n  }\r\n\r\n  let allCards = document.querySelectorAll(\".card_wrapper\");\r\n\r\n  allCards.forEach((oneCard) => {\r\n    const description = oneCard.querySelector(\".DESCRIPTION\");\r\n    const nameCard = oneCard.querySelector(\".fullName\");\r\n    const nameDoctor = oneCard.querySelector(\".doctor\");\r\n    const inputSearchValue = inputSearch.value.toLowerCase();\r\n\r\n    function checkText(element) {\r\n      return element.innerText.toLowerCase().includes(inputSearchValue);\r\n    }\r\n\r\n    const currentDescription = checkText(description);\r\n    const currentName = checkText(nameCard);\r\n    const currentDoctor = checkText(nameDoctor);\r\n\r\n    if (\r\n      currentDescription === true ||\r\n      currentName === true ||\r\n      currentDoctor === true\r\n    ) {\r\n      oneCard.style.display = \"block\";\r\n    } else {\r\n      oneCard.style.display = \"none\";\r\n    }\r\n  });\r\n});\r\n","function sendRequest(url, method = \"GET\", options) {\r\n  return fetch(url, { method: method, ...options }).then((response) => {\r\n    if (response.ok) {\r\n      if (method === \"DELETE\") {\r\n        return response;\r\n      }\r\n      return response.json();\r\n    }\r\n  });\r\n}\r\n","class VisitCardiologist extends Modal {\r\n  constructor(lastVisit, doctor) {\r\n    super(doctor);\r\n    this.lastVisit = lastVisit;\r\n  }\r\n\r\n  test(likar, pressureDev = \"\", massaDev = \"\", diseaseDev = \"\", ageDev = \"\") {\r\n    const doctorWrapper = document.querySelector(\".specialDoctorWrapper\");\r\n    if (likar === \"cardiologist\") {\r\n      doctorWrapper.innerHTML = \"\";\r\n      doctorWrapper.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `\r\n                      <div class=\"form__content__item item\">\r\n                          <label for=\"pressure\">Normal pressure</label>\r\n                          <input required value=\"${pressureDev}\" class=\"item__input\"\r\n                          id=\"pressure\"\r\n                          name=\"pressure\"\r\n                          type=\"text\"\r\n                          tabindex=\"4\"\r\n                          />\r\n                      </div>\r\n                      <div class=\"form__content__item item\">\r\n                          <label for=\"massa\">Body mass index</label>\r\n                          <input required value=\"${massaDev}\" class=\"item__input\"\r\n                          id=\"massa\"\r\n                          name=\"massa\"\r\n                          type=\"text\"\r\n                          tabindex=\"5\"\r\n                          />\r\n                      </div>\r\n                      <div class=\"form__content__item item\">\r\n                          <label for=\"disease\">Transferred cardiovascular diseases</label>\r\n                          <input required value=\"${diseaseDev}\" class=\"item__input\"\r\n                          id=\"disease\"\r\n                          name=\"disease\"\r\n                          type=\"text\"\r\n                          tabindex=\"6\"\r\n                          />\r\n                      </div>\r\n                      <div class=\"form__content__item item\">\r\n                          <label for=\"age\">Age</label>\r\n                          <input required value=\"${ageDev}\" class=\"item__input\"\r\n                          id=\"age\"\r\n                          name=\"age\"\r\n                          type=\"text\"\r\n                          tabindex=\"7\"\r\n                          />\r\n                  </div>\r\n                  <button type=\"submit\" class=\"submit__card\" >Send</button>\r\n              `\r\n      );\r\n    }\r\n  }\r\n}\r\n","class VisitDentist extends Modal {\r\n  constructor(lastVisit, doctor) {\r\n    super(doctor);\r\n    this.lastVisit = lastVisit;\r\n  }\r\n\r\n  test(likar, dataDev = \"\") {\r\n    const doctorWrapper = document.querySelector(\".specialDoctorWrapper\");\r\n    if (likar === \"dentist\") {\r\n      doctorWrapper.innerHTML = \"\";\r\n      doctorWrapper.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `\r\n              <div class=\"form__content__item item\">\r\n                  <label for=\"data\">Date of last visit</label>\r\n                  <input required value=\"${dataDev}\" class=\"item__input\"\r\n                  id=\"data\"\r\n                  name=\"data\"\r\n                  type=\"text\"\r\n                  tabindex=\"8\"\r\n                  />\r\n              </div>\r\n  \r\n              <button type=\"submit\" class=\"submit__card\" >Send</button>\r\n  \r\n              `\r\n      );\r\n    }\r\n  }\r\n}\r\n","class VisitTherapist extends Modal {\r\n  constructor(lastVisit, doctor) {\r\n    super(doctor);\r\n    this.lastVisit = lastVisit;\r\n  }\r\n\r\n  test(likar, ageDev = \"\") {\r\n    const doctorWrapper = document.querySelector(\".specialDoctorWrapper\");\r\n    if (likar === \"therapist\") {\r\n      doctorWrapper.innerHTML = \"\";\r\n      doctorWrapper.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `\r\n              <div class=\"form__content__item item\">\r\n                  <label for=\"age\">Age</label>\r\n                  <input required value=\"${ageDev}\" class=\"item__input\"\r\n                  id=\"age\"\r\n                  name=\"age\"\r\n                  type=\"text\"\r\n                  tabindex=\"7\"\r\n                  />\r\n              </div>\r\n              <button type=\"submit\" class=\"submit__card\" >Send</button>\r\n              `\r\n      );\r\n    }\r\n  }\r\n}\r\n"]}